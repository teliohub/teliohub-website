import type { NextPage } from "next";
import Head from "next/head";
import { useEffect, useRef, useState } from "react";
import Box from "../components/BoxServices/BoxService";
import HomeAnimation from "../components/HomeAnimation/HomeAnimation";
import styles from "../styles/pageStyles.module.css";
import Texts from "../components/serviceBoxes/serviceBoxTexts";
import ServiceBox from "../components/serviceBoxes/ServiceBox";
import ThreeBallAnimation from "../components/threeBallsAnimation/threeBallAnimation";
import ServiceContainer from "../components/ServicesContainers/ServiceContainer";

import MobileAppsImage from "../public/assets/home/mobile.webp";
import AugmentedRealityImage from "../public/assets/home/augmented.webp";
import OnlineShopImage from "../public/assets/home/online.webp";
import serviceText from "../components/ServicesContainers/serviceText";

import MultipleRingsAnimation from "../components/multipleRingsAnimation/MultipleRingsAnimation";
import DissapearingRings from "../components/dissapearingRings/DissapearingRings";
import WhatIsHidden from "../components/whatIsHiddenBall/WhatIsHidden";

import HomeIntroText from "../desktopComponents/homeIntroText/HomeIntroText";
import MobileService from "../desktopComponents/homePageServiceTexts/MobileService";
import AugmentedRealityService from "../desktopComponents/homePageServiceTexts/AugmentedService";
import OnlineShopService from "../desktopComponents/homePageServiceTexts/OnlineShopService";

import { motion } from "framer-motion";

const Home: NextPage = () => {


  const [isClicked, setIsClicked] = useState<boolean>(false);
  const [mobile, setMobile] = useState<any>();

  const myRef = useRef(null);

  const scrollToRef = (ref: any) => window.scrollTo(0, ref.current.offsetTop);
  const executeScroll = () => scrollToRef(myRef);

  useEffect(() => {
    const updateMobile = () => {
      setMobile(window.innerWidth < 900 ? true : false);
    };

    updateMobile();
    window.addEventListener("resize", updateMobile);
    return () => {
      window.removeEventListener("resize", updateMobile);
    };
  }, []);

  return (
    <motion.div exit={{opacity: 0}} initial="initial" animate="animate">
      <div className={styles.container}>
        <Head>
          <title>Create Next App</title>
          <meta name="description" content="Generated by create next app" />
          <meta
            name="viewport"
            content="width=device-width, initial-scale=1.0"
          />
          <link rel="icon" href="/favicon.ico" />
        </Head>

        <HomeAnimation isClicked={isClicked} />
        <pre
          onClick={() => setIsClicked(true)}
          className={
            isClicked ? styles.animationButtonClicked : styles.animationButton
          }
        >
          {`
Touch 
here`}
        </pre>
        <pre
          className={
            isClicked ? styles.starsTextActive : styles.starsTextNotActive
          }
        >
          {`
          You,
       you are
       the star
        `}
        </pre>
        <main className={styles.container}>
          <div>
            <div className={styles.marginControl}></div>
            <Box title={"Augmented Reality"} type={"black"} />
            <Box type={"gray"} />
          </div>
          <div>
            {typeof mobile !== undefined && mobile ? (
              <Box type={"gray"} />
            ) : (
              <Box type={"empty"} />
            )}
            <Box title={"Mobile Applications"} type={"black"} />
            <Box title={""} type={"empty"} />
            <Box title={"Online Shops, Web&More"} type={"black"} />
          </div>
          {typeof mobile !== undefined && mobile ? null : (
            <div>
              <Box title={""} type={"empty"} />
              <Box type={"gray"} />
            </div>
          )}
        </main>
        <div
          className={
            isClicked
              ? styles.absoluteLearnMoreClicked
              : styles.absoluteLearnMore
          }
        >
          <span>Learn more</span>
          <div onClick={executeScroll} className={styles.arrowRight}></div>
        </div>
      </div>
      <div className={styles.check} ref={myRef}></div>
      <div className={styles.flexControlTop}>
        {typeof mobile !== undefined && mobile ? (
          <div>
            <ServiceBox
              title={Texts[0].title}
              para={Texts[0].para}
              spanReady={Texts[0].spanReady}
            />
            <ServiceBox
              title={Texts[1].title}
              para={Texts[1].para}
              spanReady={Texts[1].spanReady}
            />
          </div>
        ) : (
          <HomeIntroText />
        )}
      </div>
      <div className={styles.containerMargin}>
        <h1>Lets get down</h1>
        <h1>to business</h1>
        <div className={styles.lineBreak}></div>
      </div>
      <div className={styles.flexControlTop}>
        {typeof mobile !== undefined && mobile ? (
          <div>
            <ThreeBallAnimation />
            <ServiceContainer
              imageText={serviceText[0].imageText}
              imageUrl={MobileAppsImage}
              title={serviceText[0].title}
              para={serviceText[0].para}
            />
          </div>
        ) : (
          <MobileService />
        )}
      </div>
      {typeof mobile !== undefined && mobile ? (
        <div>
          <MultipleRingsAnimation />
          <ServiceContainer
            imageText={serviceText[1].imageText}
            imageUrl={AugmentedRealityImage}
            title={serviceText[1].title}
            para={serviceText[1].para}
          />
        </div>
      ) : (
        <AugmentedRealityService />
      )}
      {typeof mobile !== undefined && mobile ? (
        <div>
          <DissapearingRings />
          <ServiceContainer
            imageText={serviceText[2].imageText}
            imageUrl={OnlineShopImage}
            title={serviceText[2].title}
            para={serviceText[2].para}
          />
        </div>
      ) : (
        <OnlineShopService />
      )}

      <div className={styles.containerMargin}>
        <h1>Where is</h1>
        <h1>the magic?</h1>
        <div className={styles.lineBreak}></div>
      </div>
      <WhatIsHidden />
    </motion.div>
  );
};

export default Home;

